{"version":3,"sources":["js/hover.js"],"names":["threeD","document","querySelectorAll","forEach","el","height","clientHeight","width","clientWidth","addEventListener","handleMove","e","xVal","layerX","yVal","layerY","yRotation","xRotation","string","style","transform"],"mappings":"AAAA,IAAMA,MAAM,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,CAAf;AAEAF,MAAM,CAACG,OAAP,CAAe,UAAUC,EAAV,EAAc;AACzB;AACA,MAAMC,MAAM,GAAGD,EAAE,CAACE,YAAlB;AACA,MAAMC,KAAK,GAAGH,EAAE,CAACI,WAAjB;AAEA;;;;;;AAKAJ,EAAAA,EAAE,CAACK,gBAAH,CAAoB,WAApB,EAAiCC,UAAjC;AAEA;;AACA,WAASA,UAAT,CAAoBC,CAApB,EAAuB;AACvB;;;;;;AAKA;AACA,QAAMC,IAAI,GAAGD,CAAC,CAACE,MAAf;AACA;;AACA,QAAMC,IAAI,GAAGH,CAAC,CAACI,MAAf;AAEA;;;;;;;AAMA,QAAMC,SAAS,GAAG,MAAM,CAACJ,IAAI,GAAGL,KAAK,GAAG,CAAhB,IAAqBA,KAA3B,CAAlB;AAEA;;AACA,QAAMU,SAAS,GAAG,CAAC,EAAD,IAAO,CAACH,IAAI,GAAGT,MAAM,GAAG,CAAjB,IAAsBA,MAA7B,CAAlB;AAEA;;AACA,QAAMa,MAAM,GAAG,2CAA2CD,SAA3C,GAAuD,eAAvD,GAAyED,SAAzE,GAAqF,MAApG;AAEA;;AACAZ,IAAAA,EAAE,CAACe,KAAH,CAASC,SAAT,GAAqBF,MAArB;AACC;AAED;;;AACAd,EAAAA,EAAE,CAACK,gBAAH,CAAoB,UAApB,EAAgC,YAAW;AAC3CL,IAAAA,EAAE,CAACe,KAAH,CAASC,SAAT,GAAqB,mDAArB;AACC,GAFD;AAIA;;AACAhB,EAAAA,EAAE,CAACK,gBAAH,CAAoB,WAApB,EAAiC,YAAW;AAC5CL,IAAAA,EAAE,CAACe,KAAH,CAASC,SAAT,GAAqB,qDAArB;AACC,GAFD;AAIA;;AACAhB,EAAAA,EAAE,CAACK,gBAAH,CAAoB,SAApB,EAA+B,YAAW;AAC1CL,IAAAA,EAAE,CAACe,KAAH,CAASC,SAAT,GAAqB,qDAArB;AACC,GAFD;AAGH,CAxDD","file":"hover.8cc9d23f.js","sourceRoot":"../src","sourcesContent":["const threeD = document.querySelectorAll(\".threeD\");\n\nthreeD.forEach(function (el) {\n    /* Get the height and width of the element */\n    const height = el.clientHeight\n    const width = el.clientWidth\n\n    /*\n    * Add a listener for mousemove event\n    * Which will trigger function 'handleMove'\n    * On mousemove\n    */\n    el.addEventListener('mousemove', handleMove)\n\n    /* Define function a */\n    function handleMove(e) {\n    /*\n        * Get position of mouse cursor\n        * With respect to the element\n        * On mouseover\n        */\n    /* Store the x position */\n    const xVal = e.layerX\n    /* Store the y position */\n    const yVal = e.layerY\n    \n    /*\n        * Calculate rotation valuee along the Y-axis\n        * Here the multiplier 20 is to\n        * Control the rotation\n        * You can change the value and see the results\n        */\n    const yRotation = 20 * ((xVal - width / 2) / width)\n    \n    /* Calculate the rotation along the X-axis */\n    const xRotation = -20 * ((yVal - height / 2) / height)\n    \n    /* Generate string for CSS transform property */\n    const string = 'perspective(500px) scale(1.1) rotateX(' + xRotation + 'deg) rotateY(' + yRotation + 'deg)'\n    \n    /* Apply the calculated transformation */\n    el.style.transform = string\n    }\n\n    /* Add listener for mouseout event, remove the rotation */\n    el.addEventListener('mouseout', function() {\n    el.style.transform = 'perspective(500px) scale(1) rotateX(0) rotateY(0)'\n    })\n\n    /* Add listener for mousedown event, to simulate click */\n    el.addEventListener('mousedown', function() {\n    el.style.transform = 'perspective(500px) scale(0.9) rotateX(0) rotateY(0)'\n    })\n\n    /* Add listener for mouseup, simulate release of mouse click */\n    el.addEventListener('mouseup', function() {\n    el.style.transform = 'perspective(500px) scale(1.1) rotateX(0) rotateY(0)'\n    })\n});"]}